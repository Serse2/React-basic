{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.js","components/EditFishForm.js","components/LogIn.js","base.js","components/Inventory.js","components/Order.js","components/Plate.js","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","e","preventDefault","currentValue","current","value","console","log","props","history","push","className","onSubmit","this","type","required","placeholder","defaultValue","ref","Component","Header","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","status","desc","image","addFish","currentTarget","reset","EditFishForm","handleEdit","index","nameEdit","valueEdit","fishes","addEditFish","details","onChange","onClick","cancelOneFish","LogIn","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","user","post","data","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Logout","Object","keys","map","key","match","loadSampleFishes","cancelFishes","Order","renderOrder","numberOfFish","order","isAvaible","cancelItem","arrayOrder","total","reduce","accumulatore","Plate","isAvailable","src","alt","disabled","addToOrder","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","params","syncState","localStoregeRef","JSON","parse","localStorage","getItem","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ac4323d4.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component, Fragment } from 'react';\nimport {getFunName} from '../helpers';\n\nexport default class StorePicker extends Component {\n    myInput = React.createRef();\n\n    goToStore = (e) => {\n        //stop the submitting\n        e.preventDefault();\n        //take the value of input text\n        let currentValue = this.myInput.current.value\n        console.log(currentValue)\n        //change the URL in /store/myInput\n        this.props.history.push(`/store/${currentValue}`)\n    }\n\n\n    render() {\n        return (\n            <Fragment>\n                <form className=\"store-selector\" onSubmit={this.goToStore}>\n                    <h2>Please enter your order name</h2>   \n                    <input \n                        type=\"text\" \n                        required \n                        placeholder='Store name' \n                        defaultValue={getFunName()}\n                        ref={this.myInput}\n                    />\n                    <button type=\"submit\">Visit store ⮕</button>\n                </form>\n            </Fragment>   \n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <header className=\"top\">\n                <h1>Catch \n                <span className=\"ofThe\">\n                    <span className=\"of\">of</span>\n                    <span className=\"the\">the</span>\n                </span>\n                day</h1>\n                <h3 className=\"tagline\">\n                    <span>Fresh Daily</span>\n                </h3>\n            </header>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class AddFishForm extends Component {\n    //create the reference\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    createFish = (e) =>{\n        //stop the submitting\n        e.preventDefault();\n        //take all the value into an object called fish\n\n        let fish = {\n            name: this.nameRef.current.value,\n            price: this.priceRef.current.value,\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n\n        //richiamare la funzione addFish passata dal componente App tramite props\n        this.props.addFish(fish)\n\n        //reset the input box after the submitting\n        e.currentTarget.reset()\n    }\n    \n    \n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" type=\"text\" placeholder=\"name\" ref={this.nameRef}></input>\n                <input name=\"price\" type=\"text\" placeholder=\"price\" ref={this.priceRef}></input>\n                <select name=\"status\" type=\"text\" placeholder=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Available</option>\n                    <option value=\"unavailable\">Unavailable</option>\n                </select>\n                <textarea name=\"desc\" type=\"text\" placeholder=\"description\" ref={this.descRef}></textarea>\n                <input name=\"image\" type=\"text\" placeholder=\"image\" ref={this.imageRef}></input>\n                <button type=\"submit\">+ add fish</button>\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class EditFishForm extends Component {\n\n\n    //Edit fish\n    handleEdit = (e) => {\n        //index passato dal componente inventory (es. fish1)\n        let index = this.props.index\n        //prendo in modo dinamico il referimento all'input modificato\n        let nameEdit = e.currentTarget.name\n        //prendo in modo dinamico la variazione dell'input\n        let valueEdit = e.currentTarget.value\n\n        let fish = {\n            //recupera tutti i dati del form di edit\n            ...this.props.fishes,\n            //aggiorna i dati (es name: pico pallo)\n            [nameEdit]: valueEdit\n        }\n\n        //richiama la funzione per la modifica dello stato, che dovrà salire di due livelli per raggiungere App (il componente nel quale vi è lo state)\n        this.props.addEditFish(index, fish)\n    }\n\n\n    render() {\n        let { name, price, status, desc, image } = this.props.details\n        return (\n            <form className=\"fish-edit\">\n                <input name=\"name\" type=\"text\"  defaultValue={name} onChange={this.handleEdit}></input>\n                <input name=\"price\" type=\"text\"  defaultValue={price} onChange={this.handleEdit}></input>\n                <select name=\"status\" type=\"text\"  defaultValue={status} onChange={this.handleEdit}>\n                    <option value=\"available\">Available</option>\n                    <option value=\"unavailable\">Unavailable</option>\n                </select>\n                <textarea name=\"desc\" type=\"text\" defaultValue={desc} onChange={this.handleEdit}></textarea>\n                <input name=\"image\" type=\"text\" defaultValue={image} onChange={this.handleEdit}></input>\n                <button onClick={() => this.props.cancelOneFish(this.props.index)}>Delite fish</button>\n            </form>\n\n        )\n    }\n}\n","import React from 'react'\n\n\nconst LogIn = (props) => (\n    <nav className=\"login\">\n        <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>Log In with Facebook</button>\n        <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>Log In with Twitter</button>\n        <button className=\"github\" onClick={() => props.authenticate('Github')}>Log In with GitHub</button>\n    </nav>\n)\n\nexport default LogIn","import Rebase from 're-base';\nimport firebase from 'firebase'\n\n\n//create a firebase App\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAMj7ndU0aHfdH1FBYnkoMHUy0PHBcm42s\",\n    authDomain: \"catch-of-the-day-new-sergio.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-new-sergio.firebaseio.com\",\n    projectId: \"catch-of-the-day-new-sergio\",\n    storageBucket: \"catch-of-the-day-new-sergio.appspot.com\",\n    messagingSenderId: \"59563416094\",\n    appId: \"1:59563416094:web:3937c8f6e2cbac96e02c0f\"\n})\n\n\n//create a Rebase binding\nconst base = Rebase.createClass(firebaseApp.database())\n\nexport { firebaseApp }\n\nexport default base","import React, { Component } from 'react';\nimport firebase from 'firebase'\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport LogIn from './LogIn'\nimport base, { firebaseApp } from '../base'\n// import base from '../base'\n\nclass Inventory extends Component {\n    \n    state = {\n        uid: null,\n        owner: null\n    }\n\n    //se siamo già loggati e viere ricaricata la pagina verificare se l'utente è ancora loggato,\n    //se si richiamare authHandler che setterà come state.uid il uid passato come parametro in {user}\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                this.authHandler({user})\n            }\n          });\n    }\n\n    \n    authHandler = async (authData) =>{\n        console.log(authData)\n        //recuperare solo la porzione del db con id del menù\n        const store =  await base.fetch(this.props.storeId, { context: this })\n        console.log(store)\n\n        console.log(authData.user.uid)\n        //Reclamare la proprietà nel caso in cui non ci sia proprietario\n        if (!store.owner){\n            base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    }\n\n    authenticate = (provider) =>{\n        //creare un provider dinamico in base al bottone premuto\n        console.log(this)\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler)\n    }\n\n    \n\n    // logout\n\n    logout = async () =>{\n        console.log('logout')\n        await firebase.auth().signOut()\n        this.setState({\n            uid: null\n        })\n    }\n\n    render() {\n\n        //creo un componentino per il logout\n\n        const Logout = <button onClick={this.logout}>LogOut</button>\n\n\n        if (!this.state.uid){\n            return <LogIn authenticate={this.authenticate} />\n        }\n         \n        if(this.state.uid !== this.state.owner){\n            return(\n                <div>\n                    <h2>Sorry you aren't the owner</h2>\n                    {Logout}\n                </div>\n            )\n        }\n\n        return (\n            <div className=\"inventory\">\n                \n                <h1>Inventory</h1>\n                {Logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm \n                        key={key}\n                        index={key}\n                        details={this.props.fishes[key]}\n                        match={this.props.match}\n                        addEditFish={this.props.addEditFish}\n                        cancelOneFish={this.props.cancelOneFish}\n                    />\n                ))}\n                <AddFishForm  addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n                <button onClick={this.props.cancelFishes}>Cencel all fishes</button>\n            </div>\n        )\n    }\n}\n\nexport default Inventory","import React, { Component } from 'react'\nimport { formatPrice } from '../helpers'\n\nexport default class Order extends Component {\n    renderOrder = (key) =>{\n\n        let fish = this.props.fishes[key];\n        let numberOfFish = this.props.order[key]\n        let isAvaible = fish && fish.status === 'available'\n        //if there is no fish return null\n        if (!fish) return null\n        if (isAvaible){\n            return (\n            <li key={key}>\n                {numberOfFish} lbs {fish.name}{formatPrice(numberOfFish * fish.price)}\n                <button onClick={() => this.props.cancelItem(key)}>&times;</button>\n            </li>\n            )\n        }\n        return <li key={key}>\"for now this article is not available\"</li>\n    }\n\n    render() {\n        //array dall'oggetto order\n        //l'array di ritorno è: [fish1, fish3, fish4]\n        let arrayOrder = Object.keys(this.props.order);\n        //accumulatore è il totale del prezzo, ed è il condenitore\n        //key è la chiave con la quale si scalano le posizioni all'interno dell'array\n        const total = arrayOrder.reduce((accumulatore, key) =>{\n            let fish = this.props.fishes[key];\n            let numberOfFish = this.props.order[key]\n            let isAvaible = fish && fish.status === 'available'\n            if (!fish) return null\n            if (isAvaible){\n                return accumulatore + numberOfFish * fish.price\n            }\n            return accumulatore\n        }, 0)\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <ul className=\"order\">\n                {arrayOrder.map(key => (this.renderOrder(key)))}\n                </ul>\n                <div className=\"total\">\n                    Total: <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { formatPrice } from '../helpers'\n\nexport default class Plate extends Component {\n    render() {\n        // destructor the variables\n        const {image, name, price, desc, status} = this.props.details\n        let isAvailable = status === 'available'\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name}/>\n                <h3 className=\"fish-name\">{name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={ ()=> this.props.addToOrder(this.props.index)}>{isAvailable ? 'Add to cart' : 'Sold Out'}</button>\n            </li>\n        )\n    }\n}\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\nimport Header from './Header';\nimport Inventory from './Inventory';\nimport Order from './Order';\nimport Plate from './Plate'\nimport sampleFishes from '../sample-fishes'\nimport base from '../base'\n\n\nexport default class App extends Component {\n    // the state\n    state = {\n        fishes: {},\n        order: {}\n    }\n\n\n    //lifecycle of React\n\n\n    componentDidMount(){\n        let { params } = this.props.match\n        //questo this.ref è differente da quello utilizzato in React.\n        //infatti si tratta di una reference di un pezzo di dati sul database\n        //in questo caso il database resta in ascolto di tutte le modifiche per lo storeId selezionato\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        })\n\n        let localStoregeRef = JSON.parse(localStorage.getItem(params.storeId))\n        console.log(localStoregeRef)\n        if (localStoregeRef) {\n           this.setState({order: localStoregeRef})\n        }\n    }\n\n\n    componentDidUpdate(){\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n    }\n\n\n    componentWillUnmount(){\n        base.removeBinding(this.ref)\n    }\n\n\n    //CUSTOM METHOD\n\n    //funzione di update da passare tramite props da App a AddFishForm\n    addFish = (fish) =>{\n        //per modificare lo stato di un componente serve:\n\n        //fare copia dello stato da modificare\n        const fishes = {...this.state.fishes}\n\n        //inserire nella variabile fishes il valore dell'oggetto fish\n        fishes[`fish${Date.now()}`] = fish\n\n        //modificare lo stato con setState\n        this.setState({\n            fishes: fishes\n        })\n    }\n\n    addEditFish = (index, fish) => {\n        //fare copia dello stato da modificare\n        const fishes = {...this.state.fishes}\n\n        //inserire nella variabile fishes il valore dell'oggetto fish\n        fishes[index] = fish\n\n        //modificare lo stato con setState\n        this.setState({\n            fishes: fishes\n        })\n        console.log('edit the fish')\n    }\n\n    //aggiungo singolo fish all'ordine\n    addToOrder = (key) => {\n        //fare copia della stato da modificare\n        let order = {...this.state.order}\n        //aggiungendo il fish selezionato o incrementando il valore se già presente\n        order[key] = order[key] + 1 || 1\n        //modificare lo stato\n        this.setState({\n            order: order\n        })\n\n    }\n\n    //cancello singolo item nel componente in ordine\n    cancelItem = (key) => {\n        //fare copia della stato da modificare\n        let order = {...this.state.order}\n        //decremento il fish selezionato e verifico che una volta arrivato a 0 non vada a -1\n        delete order[key]\n        //modificare lo stato\n        this.setState({\n            order: order\n        })\n    }\n\n    //caricamento fishes già presenti \n    loadSampleFishes = () => {\n        this.setState({\n            fishes: sampleFishes\n        })\n    }\n\n    //cancelliamo i fishes gia presenti\n    cancelFishes = () => {\n        this.setState({\n            fishes: null\n        })\n    }\n\n    cancelOneFish = (index) =>{\n        console.log(index)\n        let fishes = {...this.state.fishes}\n        fishes[index] = null\n        console.log(fishes)\n        this.setState({\n            fishes: fishes\n        })\n    }\n\n\n    render() {\n\n        const {storeId} = this.props.match.params\n\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Plate \n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />)\n                        )}\n                    </ul>\n                </div> \n                <Order \n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    cancelItem={this.cancelItem}\n                />\n                <Inventory \n                    // passo tramite props le funzioni per renderle accessibili ai livelli di componenti più bassi\n                    addFish={this.addFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    cancelFishes={this.cancelFishes}\n                    fishes={this.state.fishes}\n                    match={this.props.match}\n                    addEditFish={this.addEditFish}\n                    cancelOneFish={this.cancelOneFish}\n                    storeId={storeId}\n                />\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nconst NotFound = () =>(\n    <div>\n        <h2>404 page not found</h2>\n    </div>\n)\n            \nexport default NotFound","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App'\nimport NotFound from './NotFound'\n\n\nconst Router = () =>(\n    <BrowserRouter>\n        {/* Switch testa ogni singola rotta */}\n        <Switch>\n            {/* Se esattamente il path risulta essere solo / visualizza il componente StorePicker */}\n            <Route exact path=\"/\" component={StorePicker} />\n            {/* Se il path contiente /store/storeId visualizza il compotnete App */}\n            <Route path=\"/store/:storeId\" component={App}/>\n            {/* Catch the Error */}\n            {/* Se il path non contiente una delle due condizioni precedenti visualizza il componente NotFound */}\n            <Route component={NotFound}/>\n        </Switch>\n    </BrowserRouter>\n)\n\nexport default Router","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './components/Router'\nimport './css/style.css'\n\n\n\n\nReactDOM.render(\n    <Router />,\n    document.querySelector('#main'))\n\n    \n    "],"sourceRoot":""}